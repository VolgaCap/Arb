/**
  * @file   xroad_objects_types.h
  * @brief CAUTION: do not change this file - it is autogenerated.
  */

#pragma once

#include <common/xroad_common_types.h>
#include <common/xroad_string.h>
#include <node/xroad_node_types.h>
#include <stdint.h>

#ifdef __cplusplus
extern "C"
{
#endif

typedef enum
{
   xroad_object_type_start = 1,
   xroad_object_type_stop = 2,
   xroad_object_type_reconfig = 3,
   xroad_object_type_activate = 4,
   xroad_object_type_deactivate = 5,
   xroad_object_type_date_changed = 6,
   xroad_object_type_reset = 7,
   xroad_object_type_alarm = 8,
   xroad_object_type_exited = 9,
   xroad_object_type_event = 10,
   xroad_object_type_state = 11,
   xroad_object_type_fix_session = 15,
   xroad_object_type_order = 16,
   xroad_object_type_pos = 17,
   xroad_object_type_order_stat = 18,
   xroad_object_type_iceberg = 19,
   xroad_object_type_twap = 20,
   xroad_object_type_pov = 21,
   xroad_object_type_vwap = 22,
   xroad_object_type_instr = 23,
   xroad_object_type_tick_info = 24,
   xroad_object_type_timesheet = 25,
   xroad_object_type_mdstat = 102,
   xroad_object_type_order_sql = 26,
   xroad_object_type_cancel_sql = 27,
   xroad_object_type_replace_sql = 28,
   xroad_object_type_order_rabbit = 29,
   xroad_object_type_rake = 30,
   xroad_object_type_stealth = 31,
   xroad_object_type_spread = 32,
   xroad_object_type_leg = 33,
   xroad_object_type_spread_trade = 34,
   xroad_object_type_cgate_session = 35,
   xroad_object_type_cgate_table = 36,
   xroad_object_type_cgate_order = 37,
   xroad_object_type_order_fix = 41,
   xroad_object_type_exec_report_fix = 42,
   xroad_object_type_cancel_reject_fix = 43,
   xroad_object_type_reject_fix = 44,
   xroad_object_type_cancel_fix = 45,
   xroad_object_type_replace_fix = 46,
   xroad_object_type_cancel = 50,
   xroad_object_type_remove = 52,
   xroad_object_type_replace = 53,
   xroad_object_type_accepted = 70,
   xroad_object_type_rejected = 71,
   xroad_object_type_expired = 72,
   xroad_object_type_canceled = 73,
   xroad_object_type_trade = 74,
   xroad_object_type_cancel_rejected = 75,
   xroad_object_type_replace_rejected = 76,
   xroad_object_type_replaced = 77,
   xroad_object_type_removed = 78,
   xroad_object_type_subscribe = 80,
   xroad_object_type_unsubscribe = 81,
   xroad_object_type_subscribe_res = 82,
   xroad_object_type_opt_mm = 90,
   xroad_object_type_field = 91,
   xroad_object_type_trd_capt = 92,
   xroad_object_type_rollover = 93,
   xroad_object_type_mmaker = 94,
   xroad_object_type_sniper = 95,
   xroad_object_type_trd_capt_link_pos = 97,
   xroad_object_type_order_log = 98,
   xroad_object_type_pos_sum = 99,
   xroad_object_type_resolve = 100,
   xroad_object_type_resolve_ack = 101,
   xroad_object_type_mdata_subs = 103,
   xroad_object_type_trd_capt_move_pos = 104,
   xroad_object_type_none = -1
} xroad_object_type_t;

typedef struct
{
   xroad_object_type_t type;
   xroad_object_id_t   id;
} xroad_object_ref_t;

typedef int64_t xroad_int64_t;

typedef uint64_t xroad_uint64_t;

typedef int32_t xroad_int32_t;

typedef int8_t xroad_int8_t;

typedef double xroad_double_t;

typedef int64_t xroad_ts_t;

/**
* order quantity
*/
typedef int64_t xroad_qty_t;

typedef double xroad_price_t;

/**
* day of year
*/
typedef int32_t xroad_yday_t;

xroad_str_decl(xroad_sender_comp_id, 32u);

xroad_str_decl(xroad_sender, 16u);

typedef int64_t xroad_seqnum_t;

typedef int64_t xroad_order_id_t;

typedef uint64_t xroad_timestamp_t;

typedef int64_t xroad_transact_time_t;

xroad_str_decl(xroad_clord_id, 32u);

xroad_str_decl(xroad_ext_ref, 32u);

xroad_str_decl(xroad_account, 16u);

xroad_str_decl(xroad_client_code, 16u);

xroad_str_decl(xroad_sales, 16u);

xroad_str_decl(xroad_exec_id, 32u);

xroad_str_decl(xroad_text, 128u);

typedef int32_t xroad_fix_reason_t;

xroad_str_decl(xroad_alarm_text, 128u);

xroad_str_decl(xroad_field_name, 32u);

typedef struct
{
   uint32_t len;
   uint8_t  data[128u];
} xroad_field_value_t;

xroad_str_decl(xroad_short_text, 64u);

typedef int32_t xroad_sub_status_t;

typedef int8_t xroad_is_crashed_t;

/**
* instr name
*/
xroad_str_decl(xroad_name, 32u);

/**
* instr class
*/
xroad_str_decl(xroad_cls, 20u);

/**
* instr alias
*/
xroad_str_decl(xroad_alias, 20u);

/**
* cfi code
*/
xroad_str_decl(xroad_cfi, 6u);

/**
* 20-levels of the book
*/
typedef struct
{
   uint32_t len;
   uint8_t  data[480u];
} xroad_levels_t;

xroad_str_decl(xroad_uniq_id, 16u);

xroad_str_decl(xroad_book, 12u);

xroad_str_decl(xroad_desk, 16u);

xroad_str_decl(xroad_isin, 12u);

xroad_str_decl(xroad_bb_source, 16u);

xroad_str_decl(xroad_bb_code, 32u);

xroad_str_decl(xroad_bb_figi, 12u);

xroad_str_decl(xroad_uuid, 36u);

typedef enum
{
   xroad_side_empty = '0',
   xroad_side_buy = '1',
   xroad_side_sell = '2',
} xroad_side_t;

/**
* type of order
*/
typedef enum
{
   xroad_ord_type_market = '1', ///< market orer
   xroad_ord_type_limit = '2', ///< limit order
   xroad_ord_type_stop_limit = '4', ///< stop-limit order
} xroad_ord_type_t;

/**
* order flags
*/
typedef enum
{
   xroad_order_flags_from_mmaker = 1, ///< order from market maker
} xroad_order_flags_t;

typedef enum
{
   xroad_tif_day = '0',
   xroad_tif_gtc = '1',
   xroad_tif_ioc = '3',
   xroad_tif_fok = '4',
   xroad_tif_gtd = '6',
} xroad_tif_t;

typedef enum
{
   xroad_rej_reason_other = 1,
   xroad_rej_reason_too_late = 2,
   xroad_rej_reason_unknown_instr = 3,
   xroad_rej_reason_duplicate = 4,
   xroad_rej_reason_exceed_limit = 5,
   xroad_rej_reason_exch_closed = 6,
   xroad_rej_reason_broker_opt = 7,
   xroad_rej_reason_wrong_account = 8,
   xroad_rej_reason_already_in_pending = 9,
   xroad_rej_reason_unknown = 10,
   xroad_rej_reason_internal_error = 11,
   xroad_rej_reason_tran_limit = 12,
   xroad_rej_reason_removed = 13,
   xroad_rej_reason_guard = 14,
} xroad_rej_reason_t;

typedef enum
{
   xroad_alarm_level_error = 1,
   xroad_alarm_level_warning = 2,
} xroad_alarm_level_t;

typedef enum
{
   xroad_order_fix_status_new = '0',
   xroad_order_fix_status_partially_filled = '1',
   xroad_order_fix_status_filled = '2',
   xroad_order_fix_status_canceled = '4',
   xroad_order_fix_status_pending_cancel = '6',
   xroad_order_fix_status_rejected = '8',
   xroad_order_fix_status_pending_new = 'A',
   xroad_order_fix_status_expired = 'C',
   xroad_order_fix_status_pending_replace = 'E',
} xroad_order_fix_status_t;

typedef enum
{
   xroad_order_status_initial = 'I',
   xroad_order_status_active = 'A',
   xroad_order_status_filled = 'F',
   xroad_order_status_canceled = 'C',
   xroad_order_status_rejected = 'R',
   xroad_order_status_expired = 'E',
   xroad_order_status_removed = 'T',
   xroad_order_status_awaiting_active = 'a',
   xroad_order_status_awaiting_cancel = 'c',
   xroad_order_status_awaiting_replace = 'r',
} xroad_order_status_t;

typedef enum
{
   xroad_exec_type_new = '0',
   xroad_exec_type_canceled = '4',
   xroad_exec_type_replace = '5',
   xroad_exec_type_pending_cancel = '6',
   xroad_exec_type_rejected = '8',
   xroad_exec_type_expired = 'C',
   xroad_exec_type_pending_replace = 'E',
   xroad_exec_type_trade = 'F',
} xroad_exec_type_t;

typedef enum
{
   xroad_fix_session_status_up = 'U',
   xroad_fix_session_status_down = 'D',
} xroad_fix_session_status_t;

typedef enum
{
   xroad_rej_response_to_cancel = '1',
   xroad_rej_response_to_replace = '2',
} xroad_rej_response_to_t;

typedef enum
{
   xroad_field_type_string = 1,
   xroad_field_type_integer = 2,
   xroad_field_type_double = 3,
} xroad_field_type_t;

typedef enum
{
   xroad_opt_mm_state_disabled = 0,
   xroad_opt_mm_state_pending = 1,
   xroad_opt_mm_state_active = 2,
   xroad_opt_mm_state_error = 3,
   xroad_opt_mm_state_filled = 4,
} xroad_opt_mm_state_t;

typedef enum
{
   xroad_reset_hint_statistic = 1,
   xroad_reset_hint_fix_session = 2,
   xroad_reset_hint_state = 4,
} xroad_reset_hint_t;

typedef enum
{
   xroad_exchange_unknown = 0,
   xroad_exchange_moex = 1,
   xroad_exchange_xroad = 2,
   xroad_exchange_lse = 3,
   xroad_exchange_cme = 4,
   xroad_exchange_nyse = 5,
   xroad_exchange_nasdaq = 6,
   xroad_exchange_nymex = 7,
   xroad_exchange_ice = 8,
   xroad_exchange_eurex = 9,
   xroad_exchange_cboe = 10,
} xroad_exchange_t;

typedef enum
{
   xroad_currency_rub = 1,
   xroad_currency_usd = 2,
   xroad_currency_eur = 3,
   xroad_currency_gbp = 4,
   xroad_currency_gbx = 5,
   xroad_currency_chf = 6,
   xroad_currency_jpy = 7,
   xroad_currency_cad = 8,
   xroad_currency_hkd = 9,
   xroad_currency_nok = 10,
   xroad_currency_pln = 11,
   xroad_currency_uah = 12,
   xroad_currency_xxx = 13,
} xroad_currency_t;

typedef enum
{
   xroad_callput_call = 1,
   xroad_callput_put = 2,
} xroad_callput_t;

typedef enum
{
   xroad_calc_mid_by_shift = 1,
   xroad_calc_mid_by_shift_vol = 2,
} xroad_calc_mid_t;

typedef enum
{
   xroad_mleg_report_type_single = '1',
   xroad_mleg_report_type_leg = '2',
   xroad_mleg_report_type_mleg_sec = '3',
} xroad_mleg_report_type_t;

typedef enum
{
   xroad_subs_result_subscribed = 0,
   xroad_subs_result_unsubscribed = 1,
   xroad_subs_result_already_subscribed = 2,
   xroad_subs_result_instr_not_found = 3,
   xroad_subs_result_too_many_subscriptions = 4,
   xroad_subs_result_internal_error = 5,
   xroad_subs_result_external_error = 6,
} xroad_subs_result_t;

typedef enum
{
   xroad_node_state_active = 1,
   xroad_node_state_offline = 2,
   xroad_node_state_dead = 3,
   xroad_node_state_inactive = 4,
   xroad_node_state_pending_active = 5,
   xroad_node_state_pending_offline = 6,
} xroad_node_state_t;

typedef enum
{
   xroad_mdata_subs_state_unsubscribed = 1,
   xroad_mdata_subs_state_subscribed = 2,
   xroad_mdata_subs_state_awaiting_subs = 3,
   xroad_mdata_subs_state_awaiting_unsubs = 4,
} xroad_mdata_subs_state_t;


//--------------------------------------------------------------------------------------------------------------------//
static inline xroad_object_type_t xroad_object_type_from_str(xroad_str_t str)
{
   if (!xroad_str_cmp(xroad_str("start"), str))
   {
      return xroad_object_type_start;
   }
   if (!xroad_str_cmp(xroad_str("stop"), str))
   {
      return xroad_object_type_stop;
   }
   if (!xroad_str_cmp(xroad_str("reconfig"), str))
   {
      return xroad_object_type_reconfig;
   }
   if (!xroad_str_cmp(xroad_str("activate"), str))
   {
      return xroad_object_type_activate;
   }
   if (!xroad_str_cmp(xroad_str("deactivate"), str))
   {
      return xroad_object_type_deactivate;
   }
   if (!xroad_str_cmp(xroad_str("date_changed"), str))
   {
      return xroad_object_type_date_changed;
   }
   if (!xroad_str_cmp(xroad_str("reset"), str))
   {
      return xroad_object_type_reset;
   }
   if (!xroad_str_cmp(xroad_str("alarm"), str))
   {
      return xroad_object_type_alarm;
   }
   if (!xroad_str_cmp(xroad_str("exited"), str))
   {
      return xroad_object_type_exited;
   }
   if (!xroad_str_cmp(xroad_str("event"), str))
   {
      return xroad_object_type_event;
   }
   if (!xroad_str_cmp(xroad_str("state"), str))
   {
      return xroad_object_type_state;
   }
   if (!xroad_str_cmp(xroad_str("fix_session"), str))
   {
      return xroad_object_type_fix_session;
   }
   if (!xroad_str_cmp(xroad_str("order"), str))
   {
      return xroad_object_type_order;
   }
   if (!xroad_str_cmp(xroad_str("pos"), str))
   {
      return xroad_object_type_pos;
   }
   if (!xroad_str_cmp(xroad_str("order_stat"), str))
   {
      return xroad_object_type_order_stat;
   }
   if (!xroad_str_cmp(xroad_str("iceberg"), str))
   {
      return xroad_object_type_iceberg;
   }
   if (!xroad_str_cmp(xroad_str("twap"), str))
   {
      return xroad_object_type_twap;
   }
   if (!xroad_str_cmp(xroad_str("pov"), str))
   {
      return xroad_object_type_pov;
   }
   if (!xroad_str_cmp(xroad_str("vwap"), str))
   {
      return xroad_object_type_vwap;
   }
   if (!xroad_str_cmp(xroad_str("instr"), str))
   {
      return xroad_object_type_instr;
   }
   if (!xroad_str_cmp(xroad_str("tick_info"), str))
   {
      return xroad_object_type_tick_info;
   }
   if (!xroad_str_cmp(xroad_str("timesheet"), str))
   {
      return xroad_object_type_timesheet;
   }
   if (!xroad_str_cmp(xroad_str("mdstat"), str))
   {
      return xroad_object_type_mdstat;
   }
   if (!xroad_str_cmp(xroad_str("order_sql"), str))
   {
      return xroad_object_type_order_sql;
   }
   if (!xroad_str_cmp(xroad_str("cancel_sql"), str))
   {
      return xroad_object_type_cancel_sql;
   }
   if (!xroad_str_cmp(xroad_str("replace_sql"), str))
   {
      return xroad_object_type_replace_sql;
   }
   if (!xroad_str_cmp(xroad_str("order_rabbit"), str))
   {
      return xroad_object_type_order_rabbit;
   }
   if (!xroad_str_cmp(xroad_str("rake"), str))
   {
      return xroad_object_type_rake;
   }
   if (!xroad_str_cmp(xroad_str("stealth"), str))
   {
      return xroad_object_type_stealth;
   }
   if (!xroad_str_cmp(xroad_str("spread"), str))
   {
      return xroad_object_type_spread;
   }
   if (!xroad_str_cmp(xroad_str("leg"), str))
   {
      return xroad_object_type_leg;
   }
   if (!xroad_str_cmp(xroad_str("spread_trade"), str))
   {
      return xroad_object_type_spread_trade;
   }
   if (!xroad_str_cmp(xroad_str("cgate_session"), str))
   {
      return xroad_object_type_cgate_session;
   }
   if (!xroad_str_cmp(xroad_str("cgate_table"), str))
   {
      return xroad_object_type_cgate_table;
   }
   if (!xroad_str_cmp(xroad_str("cgate_order"), str))
   {
      return xroad_object_type_cgate_order;
   }
   if (!xroad_str_cmp(xroad_str("order_fix"), str))
   {
      return xroad_object_type_order_fix;
   }
   if (!xroad_str_cmp(xroad_str("exec_report_fix"), str))
   {
      return xroad_object_type_exec_report_fix;
   }
   if (!xroad_str_cmp(xroad_str("cancel_reject_fix"), str))
   {
      return xroad_object_type_cancel_reject_fix;
   }
   if (!xroad_str_cmp(xroad_str("reject_fix"), str))
   {
      return xroad_object_type_reject_fix;
   }
   if (!xroad_str_cmp(xroad_str("cancel_fix"), str))
   {
      return xroad_object_type_cancel_fix;
   }
   if (!xroad_str_cmp(xroad_str("replace_fix"), str))
   {
      return xroad_object_type_replace_fix;
   }
   if (!xroad_str_cmp(xroad_str("cancel"), str))
   {
      return xroad_object_type_cancel;
   }
   if (!xroad_str_cmp(xroad_str("remove"), str))
   {
      return xroad_object_type_remove;
   }
   if (!xroad_str_cmp(xroad_str("replace"), str))
   {
      return xroad_object_type_replace;
   }
   if (!xroad_str_cmp(xroad_str("accepted"), str))
   {
      return xroad_object_type_accepted;
   }
   if (!xroad_str_cmp(xroad_str("rejected"), str))
   {
      return xroad_object_type_rejected;
   }
   if (!xroad_str_cmp(xroad_str("expired"), str))
   {
      return xroad_object_type_expired;
   }
   if (!xroad_str_cmp(xroad_str("canceled"), str))
   {
      return xroad_object_type_canceled;
   }
   if (!xroad_str_cmp(xroad_str("trade"), str))
   {
      return xroad_object_type_trade;
   }
   if (!xroad_str_cmp(xroad_str("cancel_rejected"), str))
   {
      return xroad_object_type_cancel_rejected;
   }
   if (!xroad_str_cmp(xroad_str("replace_rejected"), str))
   {
      return xroad_object_type_replace_rejected;
   }
   if (!xroad_str_cmp(xroad_str("replaced"), str))
   {
      return xroad_object_type_replaced;
   }
   if (!xroad_str_cmp(xroad_str("removed"), str))
   {
      return xroad_object_type_removed;
   }
   if (!xroad_str_cmp(xroad_str("subscribe"), str))
   {
      return xroad_object_type_subscribe;
   }
   if (!xroad_str_cmp(xroad_str("unsubscribe"), str))
   {
      return xroad_object_type_unsubscribe;
   }
   if (!xroad_str_cmp(xroad_str("subscribe_res"), str))
   {
      return xroad_object_type_subscribe_res;
   }
   if (!xroad_str_cmp(xroad_str("opt_mm"), str))
   {
      return xroad_object_type_opt_mm;
   }
   if (!xroad_str_cmp(xroad_str("field"), str))
   {
      return xroad_object_type_field;
   }
   if (!xroad_str_cmp(xroad_str("trd_capt"), str))
   {
      return xroad_object_type_trd_capt;
   }
   if (!xroad_str_cmp(xroad_str("rollover"), str))
   {
      return xroad_object_type_rollover;
   }
   if (!xroad_str_cmp(xroad_str("mmaker"), str))
   {
      return xroad_object_type_mmaker;
   }
   if (!xroad_str_cmp(xroad_str("sniper"), str))
   {
      return xroad_object_type_sniper;
   }
   if (!xroad_str_cmp(xroad_str("trd_capt_link_pos"), str))
   {
      return xroad_object_type_trd_capt_link_pos;
   }
   if (!xroad_str_cmp(xroad_str("order_log"), str))
   {
      return xroad_object_type_order_log;
   }
   if (!xroad_str_cmp(xroad_str("pos_sum"), str))
   {
      return xroad_object_type_pos_sum;
   }
   if (!xroad_str_cmp(xroad_str("resolve"), str))
   {
      return xroad_object_type_resolve;
   }
   if (!xroad_str_cmp(xroad_str("resolve_ack"), str))
   {
      return xroad_object_type_resolve_ack;
   }
   if (!xroad_str_cmp(xroad_str("mdata_subs"), str))
   {
      return xroad_object_type_mdata_subs;
   }
   if (!xroad_str_cmp(xroad_str("trd_capt_move_pos"), str))
   {
      return xroad_object_type_trd_capt_move_pos;
   }
   return xroad_object_type_none;
}

//--------------------------------------------------------------------------------------------------------------------//
static inline xroad_str_t xroad_object_type_to_str(xroad_object_type_t type)
{
   switch(type)
   {
      case xroad_object_type_start:
      {
         return xroad_str("start");
      }
      case xroad_object_type_stop:
      {
         return xroad_str("stop");
      }
      case xroad_object_type_reconfig:
      {
         return xroad_str("reconfig");
      }
      case xroad_object_type_activate:
      {
         return xroad_str("activate");
      }
      case xroad_object_type_deactivate:
      {
         return xroad_str("deactivate");
      }
      case xroad_object_type_date_changed:
      {
         return xroad_str("date_changed");
      }
      case xroad_object_type_reset:
      {
         return xroad_str("reset");
      }
      case xroad_object_type_alarm:
      {
         return xroad_str("alarm");
      }
      case xroad_object_type_exited:
      {
         return xroad_str("exited");
      }
      case xroad_object_type_event:
      {
         return xroad_str("event");
      }
      case xroad_object_type_state:
      {
         return xroad_str("state");
      }
      case xroad_object_type_fix_session:
      {
         return xroad_str("fix_session");
      }
      case xroad_object_type_order:
      {
         return xroad_str("order");
      }
      case xroad_object_type_pos:
      {
         return xroad_str("pos");
      }
      case xroad_object_type_order_stat:
      {
         return xroad_str("order_stat");
      }
      case xroad_object_type_iceberg:
      {
         return xroad_str("iceberg");
      }
      case xroad_object_type_twap:
      {
         return xroad_str("twap");
      }
      case xroad_object_type_pov:
      {
         return xroad_str("pov");
      }
      case xroad_object_type_vwap:
      {
         return xroad_str("vwap");
      }
      case xroad_object_type_instr:
      {
         return xroad_str("instr");
      }
      case xroad_object_type_tick_info:
      {
         return xroad_str("tick_info");
      }
      case xroad_object_type_timesheet:
      {
         return xroad_str("timesheet");
      }
      case xroad_object_type_mdstat:
      {
         return xroad_str("mdstat");
      }
      case xroad_object_type_order_sql:
      {
         return xroad_str("order_sql");
      }
      case xroad_object_type_cancel_sql:
      {
         return xroad_str("cancel_sql");
      }
      case xroad_object_type_replace_sql:
      {
         return xroad_str("replace_sql");
      }
      case xroad_object_type_order_rabbit:
      {
         return xroad_str("order_rabbit");
      }
      case xroad_object_type_rake:
      {
         return xroad_str("rake");
      }
      case xroad_object_type_stealth:
      {
         return xroad_str("stealth");
      }
      case xroad_object_type_spread:
      {
         return xroad_str("spread");
      }
      case xroad_object_type_leg:
      {
         return xroad_str("leg");
      }
      case xroad_object_type_spread_trade:
      {
         return xroad_str("spread_trade");
      }
      case xroad_object_type_cgate_session:
      {
         return xroad_str("cgate_session");
      }
      case xroad_object_type_cgate_table:
      {
         return xroad_str("cgate_table");
      }
      case xroad_object_type_cgate_order:
      {
         return xroad_str("cgate_order");
      }
      case xroad_object_type_order_fix:
      {
         return xroad_str("order_fix");
      }
      case xroad_object_type_exec_report_fix:
      {
         return xroad_str("exec_report_fix");
      }
      case xroad_object_type_cancel_reject_fix:
      {
         return xroad_str("cancel_reject_fix");
      }
      case xroad_object_type_reject_fix:
      {
         return xroad_str("reject_fix");
      }
      case xroad_object_type_cancel_fix:
      {
         return xroad_str("cancel_fix");
      }
      case xroad_object_type_replace_fix:
      {
         return xroad_str("replace_fix");
      }
      case xroad_object_type_cancel:
      {
         return xroad_str("cancel");
      }
      case xroad_object_type_remove:
      {
         return xroad_str("remove");
      }
      case xroad_object_type_replace:
      {
         return xroad_str("replace");
      }
      case xroad_object_type_accepted:
      {
         return xroad_str("accepted");
      }
      case xroad_object_type_rejected:
      {
         return xroad_str("rejected");
      }
      case xroad_object_type_expired:
      {
         return xroad_str("expired");
      }
      case xroad_object_type_canceled:
      {
         return xroad_str("canceled");
      }
      case xroad_object_type_trade:
      {
         return xroad_str("trade");
      }
      case xroad_object_type_cancel_rejected:
      {
         return xroad_str("cancel_rejected");
      }
      case xroad_object_type_replace_rejected:
      {
         return xroad_str("replace_rejected");
      }
      case xroad_object_type_replaced:
      {
         return xroad_str("replaced");
      }
      case xroad_object_type_removed:
      {
         return xroad_str("removed");
      }
      case xroad_object_type_subscribe:
      {
         return xroad_str("subscribe");
      }
      case xroad_object_type_unsubscribe:
      {
         return xroad_str("unsubscribe");
      }
      case xroad_object_type_subscribe_res:
      {
         return xroad_str("subscribe_res");
      }
      case xroad_object_type_opt_mm:
      {
         return xroad_str("opt_mm");
      }
      case xroad_object_type_field:
      {
         return xroad_str("field");
      }
      case xroad_object_type_trd_capt:
      {
         return xroad_str("trd_capt");
      }
      case xroad_object_type_rollover:
      {
         return xroad_str("rollover");
      }
      case xroad_object_type_mmaker:
      {
         return xroad_str("mmaker");
      }
      case xroad_object_type_sniper:
      {
         return xroad_str("sniper");
      }
      case xroad_object_type_trd_capt_link_pos:
      {
         return xroad_str("trd_capt_link_pos");
      }
      case xroad_object_type_order_log:
      {
         return xroad_str("order_log");
      }
      case xroad_object_type_pos_sum:
      {
         return xroad_str("pos_sum");
      }
      case xroad_object_type_resolve:
      {
         return xroad_str("resolve");
      }
      case xroad_object_type_resolve_ack:
      {
         return xroad_str("resolve_ack");
      }
      case xroad_object_type_mdata_subs:
      {
         return xroad_str("mdata_subs");
      }
      case xroad_object_type_trd_capt_move_pos:
      {
         return xroad_str("trd_capt_move_pos");
      }
      default:
      {
         return xroad_str("none");
      }
   }
}

//--------------------------------------------------------------------------------------------------------------------//
static const inline xroad_str_t xroad_side_to_str(xroad_side_t val)
{
   switch(val)
   {
      case xroad_side_empty:
      {
         return xroad_str("empty");
      }
      case xroad_side_buy:
      {
         return xroad_str("buy");
      }
      case xroad_side_sell:
      {
         return xroad_str("sell");
      }
      default:
      {
         return xroad_str("none");
      }
   }
}

//--------------------------------------------------------------------------------------------------------------------//
static const inline xroad_side_t xroad_side_from_str(xroad_str_t val)
{
   if (!xroad_str_cmp(val, xroad_str("empty")))
   {
      return xroad_side_empty;
   }
   if (!xroad_str_cmp(val, xroad_str("buy")))
   {
      return xroad_side_buy;
   }
   if (!xroad_str_cmp(val, xroad_str("sell")))
   {
      return xroad_side_sell;
   }
   return (xroad_side_t)0;
}

//--------------------------------------------------------------------------------------------------------------------//
static const inline xroad_str_t xroad_ord_type_to_str(xroad_ord_type_t val)
{
   switch(val)
   {
      case xroad_ord_type_market:
      {
         return xroad_str("market");
      }
      case xroad_ord_type_limit:
      {
         return xroad_str("limit");
      }
      case xroad_ord_type_stop_limit:
      {
         return xroad_str("stop-limit");
      }
      default:
      {
         return xroad_str("none");
      }
   }
}

//--------------------------------------------------------------------------------------------------------------------//
static const inline xroad_ord_type_t xroad_ord_type_from_str(xroad_str_t val)
{
   if (!xroad_str_cmp(val, xroad_str("market")))
   {
      return xroad_ord_type_market;
   }
   if (!xroad_str_cmp(val, xroad_str("limit")))
   {
      return xroad_ord_type_limit;
   }
   if (!xroad_str_cmp(val, xroad_str("stop-limit")))
   {
      return xroad_ord_type_stop_limit;
   }
   return (xroad_ord_type_t)0;
}

//--------------------------------------------------------------------------------------------------------------------//
static const inline xroad_str_t xroad_order_flags_to_str(xroad_order_flags_t val)
{
   switch(val)
   {
      case xroad_order_flags_from_mmaker:
      {
         return xroad_str("from_mmaker");
      }
      default:
      {
         return xroad_str("none");
      }
   }
}

//--------------------------------------------------------------------------------------------------------------------//
static const inline xroad_order_flags_t xroad_order_flags_from_str(xroad_str_t val)
{
   if (!xroad_str_cmp(val, xroad_str("from_mmaker")))
   {
      return xroad_order_flags_from_mmaker;
   }
   return (xroad_order_flags_t)0;
}

//--------------------------------------------------------------------------------------------------------------------//
static const inline xroad_str_t xroad_tif_to_str(xroad_tif_t val)
{
   switch(val)
   {
      case xroad_tif_day:
      {
         return xroad_str("day");
      }
      case xroad_tif_gtc:
      {
         return xroad_str("GTC");
      }
      case xroad_tif_ioc:
      {
         return xroad_str("IOC");
      }
      case xroad_tif_fok:
      {
         return xroad_str("FOK");
      }
      case xroad_tif_gtd:
      {
         return xroad_str("GTD");
      }
      default:
      {
         return xroad_str("none");
      }
   }
}

//--------------------------------------------------------------------------------------------------------------------//
static const inline xroad_tif_t xroad_tif_from_str(xroad_str_t val)
{
   if (!xroad_str_cmp(val, xroad_str("day")))
   {
      return xroad_tif_day;
   }
   if (!xroad_str_cmp(val, xroad_str("GTC")))
   {
      return xroad_tif_gtc;
   }
   if (!xroad_str_cmp(val, xroad_str("IOC")))
   {
      return xroad_tif_ioc;
   }
   if (!xroad_str_cmp(val, xroad_str("FOK")))
   {
      return xroad_tif_fok;
   }
   if (!xroad_str_cmp(val, xroad_str("GTD")))
   {
      return xroad_tif_gtd;
   }
   return (xroad_tif_t)0;
}

//--------------------------------------------------------------------------------------------------------------------//
static const inline xroad_str_t xroad_rej_reason_to_str(xroad_rej_reason_t val)
{
   switch(val)
   {
      case xroad_rej_reason_other:
      {
         return xroad_str("other");
      }
      case xroad_rej_reason_too_late:
      {
         return xroad_str("too_late");
      }
      case xroad_rej_reason_unknown_instr:
      {
         return xroad_str("unknown_instr");
      }
      case xroad_rej_reason_duplicate:
      {
         return xroad_str("duplicate");
      }
      case xroad_rej_reason_exceed_limit:
      {
         return xroad_str("exceed_limit");
      }
      case xroad_rej_reason_exch_closed:
      {
         return xroad_str("exch_closed");
      }
      case xroad_rej_reason_broker_opt:
      {
         return xroad_str("broker_opt");
      }
      case xroad_rej_reason_wrong_account:
      {
         return xroad_str("wrong_account");
      }
      case xroad_rej_reason_already_in_pending:
      {
         return xroad_str("already_in_pending");
      }
      case xroad_rej_reason_unknown:
      {
         return xroad_str("unknown");
      }
      case xroad_rej_reason_internal_error:
      {
         return xroad_str("internal_error");
      }
      case xroad_rej_reason_tran_limit:
      {
         return xroad_str("tran_limit");
      }
      case xroad_rej_reason_removed:
      {
         return xroad_str("removed");
      }
      case xroad_rej_reason_guard:
      {
         return xroad_str("guard");
      }
      default:
      {
         return xroad_str("none");
      }
   }
}

//--------------------------------------------------------------------------------------------------------------------//
static const inline xroad_rej_reason_t xroad_rej_reason_from_str(xroad_str_t val)
{
   if (!xroad_str_cmp(val, xroad_str("other")))
   {
      return xroad_rej_reason_other;
   }
   if (!xroad_str_cmp(val, xroad_str("too_late")))
   {
      return xroad_rej_reason_too_late;
   }
   if (!xroad_str_cmp(val, xroad_str("unknown_instr")))
   {
      return xroad_rej_reason_unknown_instr;
   }
   if (!xroad_str_cmp(val, xroad_str("duplicate")))
   {
      return xroad_rej_reason_duplicate;
   }
   if (!xroad_str_cmp(val, xroad_str("exceed_limit")))
   {
      return xroad_rej_reason_exceed_limit;
   }
   if (!xroad_str_cmp(val, xroad_str("exch_closed")))
   {
      return xroad_rej_reason_exch_closed;
   }
   if (!xroad_str_cmp(val, xroad_str("broker_opt")))
   {
      return xroad_rej_reason_broker_opt;
   }
   if (!xroad_str_cmp(val, xroad_str("wrong_account")))
   {
      return xroad_rej_reason_wrong_account;
   }
   if (!xroad_str_cmp(val, xroad_str("already_in_pending")))
   {
      return xroad_rej_reason_already_in_pending;
   }
   if (!xroad_str_cmp(val, xroad_str("unknown")))
   {
      return xroad_rej_reason_unknown;
   }
   if (!xroad_str_cmp(val, xroad_str("internal_error")))
   {
      return xroad_rej_reason_internal_error;
   }
   if (!xroad_str_cmp(val, xroad_str("tran_limit")))
   {
      return xroad_rej_reason_tran_limit;
   }
   if (!xroad_str_cmp(val, xroad_str("removed")))
   {
      return xroad_rej_reason_removed;
   }
   if (!xroad_str_cmp(val, xroad_str("guard")))
   {
      return xroad_rej_reason_guard;
   }
   return (xroad_rej_reason_t)0;
}

//--------------------------------------------------------------------------------------------------------------------//
static const inline xroad_str_t xroad_alarm_level_to_str(xroad_alarm_level_t val)
{
   switch(val)
   {
      case xroad_alarm_level_error:
      {
         return xroad_str("error");
      }
      case xroad_alarm_level_warning:
      {
         return xroad_str("warning");
      }
      default:
      {
         return xroad_str("none");
      }
   }
}

//--------------------------------------------------------------------------------------------------------------------//
static const inline xroad_alarm_level_t xroad_alarm_level_from_str(xroad_str_t val)
{
   if (!xroad_str_cmp(val, xroad_str("error")))
   {
      return xroad_alarm_level_error;
   }
   if (!xroad_str_cmp(val, xroad_str("warning")))
   {
      return xroad_alarm_level_warning;
   }
   return (xroad_alarm_level_t)0;
}

//--------------------------------------------------------------------------------------------------------------------//
static const inline xroad_str_t xroad_order_fix_status_to_str(xroad_order_fix_status_t val)
{
   switch(val)
   {
      case xroad_order_fix_status_new:
      {
         return xroad_str("new");
      }
      case xroad_order_fix_status_partially_filled:
      {
         return xroad_str("partially_filled");
      }
      case xroad_order_fix_status_filled:
      {
         return xroad_str("filled");
      }
      case xroad_order_fix_status_canceled:
      {
         return xroad_str("canceled");
      }
      case xroad_order_fix_status_pending_cancel:
      {
         return xroad_str("pending_cancel");
      }
      case xroad_order_fix_status_rejected:
      {
         return xroad_str("rejected");
      }
      case xroad_order_fix_status_pending_new:
      {
         return xroad_str("pending_new");
      }
      case xroad_order_fix_status_expired:
      {
         return xroad_str("expired");
      }
      case xroad_order_fix_status_pending_replace:
      {
         return xroad_str("pending_replace");
      }
      default:
      {
         return xroad_str("none");
      }
   }
}

//--------------------------------------------------------------------------------------------------------------------//
static const inline xroad_order_fix_status_t xroad_order_fix_status_from_str(xroad_str_t val)
{
   if (!xroad_str_cmp(val, xroad_str("new")))
   {
      return xroad_order_fix_status_new;
   }
   if (!xroad_str_cmp(val, xroad_str("partially_filled")))
   {
      return xroad_order_fix_status_partially_filled;
   }
   if (!xroad_str_cmp(val, xroad_str("filled")))
   {
      return xroad_order_fix_status_filled;
   }
   if (!xroad_str_cmp(val, xroad_str("canceled")))
   {
      return xroad_order_fix_status_canceled;
   }
   if (!xroad_str_cmp(val, xroad_str("pending_cancel")))
   {
      return xroad_order_fix_status_pending_cancel;
   }
   if (!xroad_str_cmp(val, xroad_str("rejected")))
   {
      return xroad_order_fix_status_rejected;
   }
   if (!xroad_str_cmp(val, xroad_str("pending_new")))
   {
      return xroad_order_fix_status_pending_new;
   }
   if (!xroad_str_cmp(val, xroad_str("expired")))
   {
      return xroad_order_fix_status_expired;
   }
   if (!xroad_str_cmp(val, xroad_str("pending_replace")))
   {
      return xroad_order_fix_status_pending_replace;
   }
   return (xroad_order_fix_status_t)0;
}

//--------------------------------------------------------------------------------------------------------------------//
static const inline xroad_str_t xroad_order_status_to_str(xroad_order_status_t val)
{
   switch(val)
   {
      case xroad_order_status_initial:
      {
         return xroad_str("initial");
      }
      case xroad_order_status_active:
      {
         return xroad_str("active");
      }
      case xroad_order_status_filled:
      {
         return xroad_str("filled");
      }
      case xroad_order_status_canceled:
      {
         return xroad_str("canceled");
      }
      case xroad_order_status_rejected:
      {
         return xroad_str("rejected");
      }
      case xroad_order_status_expired:
      {
         return xroad_str("expired");
      }
      case xroad_order_status_removed:
      {
         return xroad_str("removed");
      }
      case xroad_order_status_awaiting_active:
      {
         return xroad_str("awaiting_active");
      }
      case xroad_order_status_awaiting_cancel:
      {
         return xroad_str("awaiting_cancel");
      }
      case xroad_order_status_awaiting_replace:
      {
         return xroad_str("awaiting_replace");
      }
      default:
      {
         return xroad_str("none");
      }
   }
}

//--------------------------------------------------------------------------------------------------------------------//
static const inline xroad_order_status_t xroad_order_status_from_str(xroad_str_t val)
{
   if (!xroad_str_cmp(val, xroad_str("initial")))
   {
      return xroad_order_status_initial;
   }
   if (!xroad_str_cmp(val, xroad_str("active")))
   {
      return xroad_order_status_active;
   }
   if (!xroad_str_cmp(val, xroad_str("filled")))
   {
      return xroad_order_status_filled;
   }
   if (!xroad_str_cmp(val, xroad_str("canceled")))
   {
      return xroad_order_status_canceled;
   }
   if (!xroad_str_cmp(val, xroad_str("rejected")))
   {
      return xroad_order_status_rejected;
   }
   if (!xroad_str_cmp(val, xroad_str("expired")))
   {
      return xroad_order_status_expired;
   }
   if (!xroad_str_cmp(val, xroad_str("removed")))
   {
      return xroad_order_status_removed;
   }
   if (!xroad_str_cmp(val, xroad_str("awaiting_active")))
   {
      return xroad_order_status_awaiting_active;
   }
   if (!xroad_str_cmp(val, xroad_str("awaiting_cancel")))
   {
      return xroad_order_status_awaiting_cancel;
   }
   if (!xroad_str_cmp(val, xroad_str("awaiting_replace")))
   {
      return xroad_order_status_awaiting_replace;
   }
   return (xroad_order_status_t)0;
}

//--------------------------------------------------------------------------------------------------------------------//
static const inline xroad_str_t xroad_exec_type_to_str(xroad_exec_type_t val)
{
   switch(val)
   {
      case xroad_exec_type_new:
      {
         return xroad_str("new");
      }
      case xroad_exec_type_canceled:
      {
         return xroad_str("canceled");
      }
      case xroad_exec_type_replace:
      {
         return xroad_str("replace");
      }
      case xroad_exec_type_pending_cancel:
      {
         return xroad_str("pending_cancel");
      }
      case xroad_exec_type_rejected:
      {
         return xroad_str("rejected");
      }
      case xroad_exec_type_expired:
      {
         return xroad_str("expired");
      }
      case xroad_exec_type_pending_replace:
      {
         return xroad_str("pending_replace");
      }
      case xroad_exec_type_trade:
      {
         return xroad_str("trade");
      }
      default:
      {
         return xroad_str("none");
      }
   }
}

//--------------------------------------------------------------------------------------------------------------------//
static const inline xroad_exec_type_t xroad_exec_type_from_str(xroad_str_t val)
{
   if (!xroad_str_cmp(val, xroad_str("new")))
   {
      return xroad_exec_type_new;
   }
   if (!xroad_str_cmp(val, xroad_str("canceled")))
   {
      return xroad_exec_type_canceled;
   }
   if (!xroad_str_cmp(val, xroad_str("replace")))
   {
      return xroad_exec_type_replace;
   }
   if (!xroad_str_cmp(val, xroad_str("pending_cancel")))
   {
      return xroad_exec_type_pending_cancel;
   }
   if (!xroad_str_cmp(val, xroad_str("rejected")))
   {
      return xroad_exec_type_rejected;
   }
   if (!xroad_str_cmp(val, xroad_str("expired")))
   {
      return xroad_exec_type_expired;
   }
   if (!xroad_str_cmp(val, xroad_str("pending_replace")))
   {
      return xroad_exec_type_pending_replace;
   }
   if (!xroad_str_cmp(val, xroad_str("trade")))
   {
      return xroad_exec_type_trade;
   }
   return (xroad_exec_type_t)0;
}

//--------------------------------------------------------------------------------------------------------------------//
static const inline xroad_str_t xroad_fix_session_status_to_str(xroad_fix_session_status_t val)
{
   switch(val)
   {
      case xroad_fix_session_status_up:
      {
         return xroad_str("up");
      }
      case xroad_fix_session_status_down:
      {
         return xroad_str("down");
      }
      default:
      {
         return xroad_str("none");
      }
   }
}

//--------------------------------------------------------------------------------------------------------------------//
static const inline xroad_fix_session_status_t xroad_fix_session_status_from_str(xroad_str_t val)
{
   if (!xroad_str_cmp(val, xroad_str("up")))
   {
      return xroad_fix_session_status_up;
   }
   if (!xroad_str_cmp(val, xroad_str("down")))
   {
      return xroad_fix_session_status_down;
   }
   return (xroad_fix_session_status_t)0;
}

//--------------------------------------------------------------------------------------------------------------------//
static const inline xroad_str_t xroad_rej_response_to_to_str(xroad_rej_response_to_t val)
{
   switch(val)
   {
      case xroad_rej_response_to_cancel:
      {
         return xroad_str("response_to_cancel");
      }
      case xroad_rej_response_to_replace:
      {
         return xroad_str("response_to_replace");
      }
      default:
      {
         return xroad_str("none");
      }
   }
}

//--------------------------------------------------------------------------------------------------------------------//
static const inline xroad_rej_response_to_t xroad_rej_response_to_from_str(xroad_str_t val)
{
   if (!xroad_str_cmp(val, xroad_str("response_to_cancel")))
   {
      return xroad_rej_response_to_cancel;
   }
   if (!xroad_str_cmp(val, xroad_str("response_to_replace")))
   {
      return xroad_rej_response_to_replace;
   }
   return (xroad_rej_response_to_t)0;
}

//--------------------------------------------------------------------------------------------------------------------//
static const inline xroad_str_t xroad_field_type_to_str(xroad_field_type_t val)
{
   switch(val)
   {
      case xroad_field_type_string:
      {
         return xroad_str("string");
      }
      case xroad_field_type_integer:
      {
         return xroad_str("integer");
      }
      case xroad_field_type_double:
      {
         return xroad_str("double");
      }
      default:
      {
         return xroad_str("none");
      }
   }
}

//--------------------------------------------------------------------------------------------------------------------//
static const inline xroad_field_type_t xroad_field_type_from_str(xroad_str_t val)
{
   if (!xroad_str_cmp(val, xroad_str("string")))
   {
      return xroad_field_type_string;
   }
   if (!xroad_str_cmp(val, xroad_str("integer")))
   {
      return xroad_field_type_integer;
   }
   if (!xroad_str_cmp(val, xroad_str("double")))
   {
      return xroad_field_type_double;
   }
   return (xroad_field_type_t)0;
}

//--------------------------------------------------------------------------------------------------------------------//
static const inline xroad_str_t xroad_opt_mm_state_to_str(xroad_opt_mm_state_t val)
{
   switch(val)
   {
      case xroad_opt_mm_state_disabled:
      {
         return xroad_str("disabled");
      }
      case xroad_opt_mm_state_pending:
      {
         return xroad_str("pending");
      }
      case xroad_opt_mm_state_active:
      {
         return xroad_str("active");
      }
      case xroad_opt_mm_state_error:
      {
         return xroad_str("error");
      }
      case xroad_opt_mm_state_filled:
      {
         return xroad_str("filled");
      }
      default:
      {
         return xroad_str("none");
      }
   }
}

//--------------------------------------------------------------------------------------------------------------------//
static const inline xroad_opt_mm_state_t xroad_opt_mm_state_from_str(xroad_str_t val)
{
   if (!xroad_str_cmp(val, xroad_str("disabled")))
   {
      return xroad_opt_mm_state_disabled;
   }
   if (!xroad_str_cmp(val, xroad_str("pending")))
   {
      return xroad_opt_mm_state_pending;
   }
   if (!xroad_str_cmp(val, xroad_str("active")))
   {
      return xroad_opt_mm_state_active;
   }
   if (!xroad_str_cmp(val, xroad_str("error")))
   {
      return xroad_opt_mm_state_error;
   }
   if (!xroad_str_cmp(val, xroad_str("filled")))
   {
      return xroad_opt_mm_state_filled;
   }
   return (xroad_opt_mm_state_t)0;
}

//--------------------------------------------------------------------------------------------------------------------//
static const inline xroad_str_t xroad_reset_hint_to_str(xroad_reset_hint_t val)
{
   switch(val)
   {
      case xroad_reset_hint_statistic:
      {
         return xroad_str("statistic");
      }
      case xroad_reset_hint_fix_session:
      {
         return xroad_str("fix_session");
      }
      case xroad_reset_hint_state:
      {
         return xroad_str("state");
      }
      default:
      {
         return xroad_str("none");
      }
   }
}

//--------------------------------------------------------------------------------------------------------------------//
static const inline xroad_reset_hint_t xroad_reset_hint_from_str(xroad_str_t val)
{
   if (!xroad_str_cmp(val, xroad_str("statistic")))
   {
      return xroad_reset_hint_statistic;
   }
   if (!xroad_str_cmp(val, xroad_str("fix_session")))
   {
      return xroad_reset_hint_fix_session;
   }
   if (!xroad_str_cmp(val, xroad_str("state")))
   {
      return xroad_reset_hint_state;
   }
   return (xroad_reset_hint_t)0;
}

//--------------------------------------------------------------------------------------------------------------------//
static const inline xroad_str_t xroad_exchange_to_str(xroad_exchange_t val)
{
   switch(val)
   {
      case xroad_exchange_unknown:
      {
         return xroad_str("UNKNOWN");
      }
      case xroad_exchange_moex:
      {
         return xroad_str("MOEX");
      }
      case xroad_exchange_xroad:
      {
         return xroad_str("XROAD");
      }
      case xroad_exchange_lse:
      {
         return xroad_str("LSE");
      }
      case xroad_exchange_cme:
      {
         return xroad_str("CME");
      }
      case xroad_exchange_nyse:
      {
         return xroad_str("NYSE");
      }
      case xroad_exchange_nasdaq:
      {
         return xroad_str("NASDAQ");
      }
      case xroad_exchange_nymex:
      {
         return xroad_str("NYMEX");
      }
      case xroad_exchange_ice:
      {
         return xroad_str("ICE");
      }
      case xroad_exchange_eurex:
      {
         return xroad_str("EUREX");
      }
      case xroad_exchange_cboe:
      {
         return xroad_str("CBOE");
      }
      default:
      {
         return xroad_str("none");
      }
   }
}

//--------------------------------------------------------------------------------------------------------------------//
static const inline xroad_exchange_t xroad_exchange_from_str(xroad_str_t val)
{
   if (!xroad_str_cmp(val, xroad_str("UNKNOWN")))
   {
      return xroad_exchange_unknown;
   }
   if (!xroad_str_cmp(val, xroad_str("MOEX")))
   {
      return xroad_exchange_moex;
   }
   if (!xroad_str_cmp(val, xroad_str("XROAD")))
   {
      return xroad_exchange_xroad;
   }
   if (!xroad_str_cmp(val, xroad_str("LSE")))
   {
      return xroad_exchange_lse;
   }
   if (!xroad_str_cmp(val, xroad_str("CME")))
   {
      return xroad_exchange_cme;
   }
   if (!xroad_str_cmp(val, xroad_str("NYSE")))
   {
      return xroad_exchange_nyse;
   }
   if (!xroad_str_cmp(val, xroad_str("NASDAQ")))
   {
      return xroad_exchange_nasdaq;
   }
   if (!xroad_str_cmp(val, xroad_str("NYMEX")))
   {
      return xroad_exchange_nymex;
   }
   if (!xroad_str_cmp(val, xroad_str("ICE")))
   {
      return xroad_exchange_ice;
   }
   if (!xroad_str_cmp(val, xroad_str("EUREX")))
   {
      return xroad_exchange_eurex;
   }
   if (!xroad_str_cmp(val, xroad_str("CBOE")))
   {
      return xroad_exchange_cboe;
   }
   return (xroad_exchange_t)0;
}

//--------------------------------------------------------------------------------------------------------------------//
static const inline xroad_str_t xroad_currency_to_str(xroad_currency_t val)
{
   switch(val)
   {
      case xroad_currency_rub:
      {
         return xroad_str("RUB");
      }
      case xroad_currency_usd:
      {
         return xroad_str("USD");
      }
      case xroad_currency_eur:
      {
         return xroad_str("EUR");
      }
      case xroad_currency_gbp:
      {
         return xroad_str("GBP");
      }
      case xroad_currency_gbx:
      {
         return xroad_str("GBX");
      }
      case xroad_currency_chf:
      {
         return xroad_str("CHF");
      }
      case xroad_currency_jpy:
      {
         return xroad_str("JPY");
      }
      case xroad_currency_cad:
      {
         return xroad_str("CAD");
      }
      case xroad_currency_hkd:
      {
         return xroad_str("HKD");
      }
      case xroad_currency_nok:
      {
         return xroad_str("NOK");
      }
      case xroad_currency_pln:
      {
         return xroad_str("PLN");
      }
      case xroad_currency_uah:
      {
         return xroad_str("UAH");
      }
      case xroad_currency_xxx:
      {
         return xroad_str("XXX");
      }
      default:
      {
         return xroad_str("none");
      }
   }
}

//--------------------------------------------------------------------------------------------------------------------//
static const inline xroad_currency_t xroad_currency_from_str(xroad_str_t val)
{
   if (!xroad_str_cmp(val, xroad_str("RUB")))
   {
      return xroad_currency_rub;
   }
   if (!xroad_str_cmp(val, xroad_str("USD")))
   {
      return xroad_currency_usd;
   }
   if (!xroad_str_cmp(val, xroad_str("EUR")))
   {
      return xroad_currency_eur;
   }
   if (!xroad_str_cmp(val, xroad_str("GBP")))
   {
      return xroad_currency_gbp;
   }
   if (!xroad_str_cmp(val, xroad_str("GBX")))
   {
      return xroad_currency_gbx;
   }
   if (!xroad_str_cmp(val, xroad_str("CHF")))
   {
      return xroad_currency_chf;
   }
   if (!xroad_str_cmp(val, xroad_str("JPY")))
   {
      return xroad_currency_jpy;
   }
   if (!xroad_str_cmp(val, xroad_str("CAD")))
   {
      return xroad_currency_cad;
   }
   if (!xroad_str_cmp(val, xroad_str("HKD")))
   {
      return xroad_currency_hkd;
   }
   if (!xroad_str_cmp(val, xroad_str("NOK")))
   {
      return xroad_currency_nok;
   }
   if (!xroad_str_cmp(val, xroad_str("PLN")))
   {
      return xroad_currency_pln;
   }
   if (!xroad_str_cmp(val, xroad_str("UAH")))
   {
      return xroad_currency_uah;
   }
   if (!xroad_str_cmp(val, xroad_str("XXX")))
   {
      return xroad_currency_xxx;
   }
   return (xroad_currency_t)0;
}

//--------------------------------------------------------------------------------------------------------------------//
static const inline xroad_str_t xroad_callput_to_str(xroad_callput_t val)
{
   switch(val)
   {
      case xroad_callput_call:
      {
         return xroad_str("call");
      }
      case xroad_callput_put:
      {
         return xroad_str("put");
      }
      default:
      {
         return xroad_str("none");
      }
   }
}

//--------------------------------------------------------------------------------------------------------------------//
static const inline xroad_callput_t xroad_callput_from_str(xroad_str_t val)
{
   if (!xroad_str_cmp(val, xroad_str("call")))
   {
      return xroad_callput_call;
   }
   if (!xroad_str_cmp(val, xroad_str("put")))
   {
      return xroad_callput_put;
   }
   return (xroad_callput_t)0;
}

//--------------------------------------------------------------------------------------------------------------------//
static const inline xroad_str_t xroad_calc_mid_to_str(xroad_calc_mid_t val)
{
   switch(val)
   {
      case xroad_calc_mid_by_shift:
      {
         return xroad_str("by_shift");
      }
      case xroad_calc_mid_by_shift_vol:
      {
         return xroad_str("by_shift_vol");
      }
      default:
      {
         return xroad_str("none");
      }
   }
}

//--------------------------------------------------------------------------------------------------------------------//
static const inline xroad_calc_mid_t xroad_calc_mid_from_str(xroad_str_t val)
{
   if (!xroad_str_cmp(val, xroad_str("by_shift")))
   {
      return xroad_calc_mid_by_shift;
   }
   if (!xroad_str_cmp(val, xroad_str("by_shift_vol")))
   {
      return xroad_calc_mid_by_shift_vol;
   }
   return (xroad_calc_mid_t)0;
}

//--------------------------------------------------------------------------------------------------------------------//
static const inline xroad_str_t xroad_mleg_report_type_to_str(xroad_mleg_report_type_t val)
{
   switch(val)
   {
      case xroad_mleg_report_type_single:
      {
         return xroad_str("single");
      }
      case xroad_mleg_report_type_leg:
      {
         return xroad_str("leg");
      }
      case xroad_mleg_report_type_mleg_sec:
      {
         return xroad_str("mleg_sec");
      }
      default:
      {
         return xroad_str("none");
      }
   }
}

//--------------------------------------------------------------------------------------------------------------------//
static const inline xroad_mleg_report_type_t xroad_mleg_report_type_from_str(xroad_str_t val)
{
   if (!xroad_str_cmp(val, xroad_str("single")))
   {
      return xroad_mleg_report_type_single;
   }
   if (!xroad_str_cmp(val, xroad_str("leg")))
   {
      return xroad_mleg_report_type_leg;
   }
   if (!xroad_str_cmp(val, xroad_str("mleg_sec")))
   {
      return xroad_mleg_report_type_mleg_sec;
   }
   return (xroad_mleg_report_type_t)0;
}

//--------------------------------------------------------------------------------------------------------------------//
static const inline xroad_str_t xroad_subs_result_to_str(xroad_subs_result_t val)
{
   switch(val)
   {
      case xroad_subs_result_subscribed:
      {
         return xroad_str("subscribed");
      }
      case xroad_subs_result_unsubscribed:
      {
         return xroad_str("unsubscribed");
      }
      case xroad_subs_result_already_subscribed:
      {
         return xroad_str("already subscribed");
      }
      case xroad_subs_result_instr_not_found:
      {
         return xroad_str("instr not found");
      }
      case xroad_subs_result_too_many_subscriptions:
      {
         return xroad_str("too many subscriptions");
      }
      case xroad_subs_result_internal_error:
      {
         return xroad_str("internal error");
      }
      case xroad_subs_result_external_error:
      {
         return xroad_str("external error");
      }
      default:
      {
         return xroad_str("none");
      }
   }
}

//--------------------------------------------------------------------------------------------------------------------//
static const inline xroad_subs_result_t xroad_subs_result_from_str(xroad_str_t val)
{
   if (!xroad_str_cmp(val, xroad_str("subscribed")))
   {
      return xroad_subs_result_subscribed;
   }
   if (!xroad_str_cmp(val, xroad_str("unsubscribed")))
   {
      return xroad_subs_result_unsubscribed;
   }
   if (!xroad_str_cmp(val, xroad_str("already subscribed")))
   {
      return xroad_subs_result_already_subscribed;
   }
   if (!xroad_str_cmp(val, xroad_str("instr not found")))
   {
      return xroad_subs_result_instr_not_found;
   }
   if (!xroad_str_cmp(val, xroad_str("too many subscriptions")))
   {
      return xroad_subs_result_too_many_subscriptions;
   }
   if (!xroad_str_cmp(val, xroad_str("internal error")))
   {
      return xroad_subs_result_internal_error;
   }
   if (!xroad_str_cmp(val, xroad_str("external error")))
   {
      return xroad_subs_result_external_error;
   }
   return (xroad_subs_result_t)0;
}

//--------------------------------------------------------------------------------------------------------------------//
static const inline xroad_str_t xroad_node_state_to_str(xroad_node_state_t val)
{
   switch(val)
   {
      case xroad_node_state_active:
      {
         return xroad_str("active");
      }
      case xroad_node_state_offline:
      {
         return xroad_str("offline");
      }
      case xroad_node_state_dead:
      {
         return xroad_str("dead");
      }
      case xroad_node_state_inactive:
      {
         return xroad_str("inactive");
      }
      case xroad_node_state_pending_active:
      {
         return xroad_str("pending active");
      }
      case xroad_node_state_pending_offline:
      {
         return xroad_str("pending offline");
      }
      default:
      {
         return xroad_str("none");
      }
   }
}

//--------------------------------------------------------------------------------------------------------------------//
static const inline xroad_node_state_t xroad_node_state_from_str(xroad_str_t val)
{
   if (!xroad_str_cmp(val, xroad_str("active")))
   {
      return xroad_node_state_active;
   }
   if (!xroad_str_cmp(val, xroad_str("offline")))
   {
      return xroad_node_state_offline;
   }
   if (!xroad_str_cmp(val, xroad_str("dead")))
   {
      return xroad_node_state_dead;
   }
   if (!xroad_str_cmp(val, xroad_str("inactive")))
   {
      return xroad_node_state_inactive;
   }
   if (!xroad_str_cmp(val, xroad_str("pending active")))
   {
      return xroad_node_state_pending_active;
   }
   if (!xroad_str_cmp(val, xroad_str("pending offline")))
   {
      return xroad_node_state_pending_offline;
   }
   return (xroad_node_state_t)0;
}

//--------------------------------------------------------------------------------------------------------------------//
static const inline xroad_str_t xroad_mdata_subs_state_to_str(xroad_mdata_subs_state_t val)
{
   switch(val)
   {
      case xroad_mdata_subs_state_unsubscribed:
      {
         return xroad_str("unsubscribed");
      }
      case xroad_mdata_subs_state_subscribed:
      {
         return xroad_str("subscribed");
      }
      case xroad_mdata_subs_state_awaiting_subs:
      {
         return xroad_str("awaiting_subs");
      }
      case xroad_mdata_subs_state_awaiting_unsubs:
      {
         return xroad_str("awaiting_unsubs");
      }
      default:
      {
         return xroad_str("none");
      }
   }
}

//--------------------------------------------------------------------------------------------------------------------//
static const inline xroad_mdata_subs_state_t xroad_mdata_subs_state_from_str(xroad_str_t val)
{
   if (!xroad_str_cmp(val, xroad_str("unsubscribed")))
   {
      return xroad_mdata_subs_state_unsubscribed;
   }
   if (!xroad_str_cmp(val, xroad_str("subscribed")))
   {
      return xroad_mdata_subs_state_subscribed;
   }
   if (!xroad_str_cmp(val, xroad_str("awaiting_subs")))
   {
      return xroad_mdata_subs_state_awaiting_subs;
   }
   if (!xroad_str_cmp(val, xroad_str("awaiting_unsubs")))
   {
      return xroad_mdata_subs_state_awaiting_unsubs;
   }
   return (xroad_mdata_subs_state_t)0;
}


#ifdef __cplusplus
}
#endif